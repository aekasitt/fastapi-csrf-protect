[build-system]
build-backend = 'hatchling.build'
requires = [ 'hatchling >=1.27.0' ]


[dependency-groups]
dev = [
  'mypy >=1.15.0',
  'pdoc >=14.7.0',
  'ruff >=0.4.7',
]
examples = [
  'python-multipart >=0.0.6',
  'pydantic[email] >=1.7.2,<3.0.0',
  'minijinja >=2.11.0',
  'fastapi >=0',
  'granian >=2.5.0',
]
tests = [
  'fastapi >=0',
  'httpx >=0.24.1',
  'pytest >=7.3.1',
  'pytest-modern >=0.7.3',
]


[project]
authors = [
  {email='aekazitt+github@gmail.com', name='Sitt Guruvanich'},
]
classifiers = [
  'Environment :: Web Environment',
  'Framework :: AsyncIO',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  'Programming Language :: Python :: 3.14',
  'Programming Language :: Python :: 3 :: Only',
  'Operating System :: OS Independent',
  'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
  'Topic :: Software Development :: Libraries :: Python Modules',
]
dependencies = [
  'itsdangerous >=2.0.1,<3.0.0',
  'pydantic >=2.0.0',
  'pydantic-settings >=2.0.0',
  'starlette >=0',
]
description = 'Stateless implementation of Cross-Site Request Forgery (XSRF) Protection by using Double Submit Cookie mitigation pattern'
homepage = 'https://github.com/aekasitt/fastapi-csrf-protect'
keywords = [
  'asynchronous',
  'cross-site request forgery',
  'csrf',
  'fastapi',
  'samesite',
  'starlette',
  'xsrf',
]
license = 'MIT'
readme = 'README.md'
name = 'fastapi-csrf-protect'
repository = 'https://github.com/aekasitt/fastapi-csrf-protect'
requires-python = '>=3.9'
version = '1.0.6'


[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = [ 'examples' ]
strict = true


[tool.pytest.ini_options]
addopts = [
  '--capture=sys',  # capture sysout messages
  '--strict-markers',
  '--tb=short',  # traceback
]
testpaths = [ 'tests' ]
python_files = '*.py'


[tool.ruff]
indent-width = 2
line-length = 100
target-version = 'py39'


[tool.ruff.lint.per-file-ignores]
'__init__.py' = [
  'F401',  # Ignore unused imports
]
'tests/**/*.py' = [
  'F401',  # Ignore unused imports
  'F811',  # Ignore redefinition of unused variable
  'F841',  # Ignore local variable assigned but never used
]
